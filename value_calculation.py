# -*- coding: utf-8 -*-
"""Value calculation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WeU7iXPNR3g6DRJNbsMn0nYpH_VJGUvm
"""

A = int(input("Enter the type of Diabetes:"))
if A == 1:
  B = int(input("Enter the diet \"1.Before Meal,2.After Meal :\""))
  if B == 1:
    Glucose = myfunc(float(input("Voltage Value:")))
    print("Glucose Value:",Glucose,"mmol/L")
    print("Glucose Value:",Glucose*18,"mg/dL")

  elif B == 2:
    Glucose = myfunc(float(input("Voltage Value:")))
    print("Glucose Value:",Glucose,"mmol/L")
    print("Glucose Value:",Glucose*18,"mg/dL")
elif A == 2:
  C = int(input("Enter the diet \"1.Before Meal,2.After Meal :\""))
  if C == 1:
    Glucose = myfunc(float(input("Voltage Value:")))
    print("Glucose Value:",Glucose,"mmol/L")
    print("Glucose Value:",Glucose*18,"mg/dL")
  elif C == 2:
    Glucose = myfunc(float(input("Voltage Value:")))
    print("Glucose Value:",Glucose,"mmol/L")
    print("Glucose Value:",Glucose*18,"mg/dL")

import numpy as np
import matplotlib.pyplot as plt
from scipy import stats

# here we try use the equation "y = -24.069x + 107.13"

# feeding data
x = np.array([4.25,4.28,4.26,4.20,4.14,4.14,4.16,4.07,4.09,4.08,3.96,3.88,3.90,3.83,3.72,3.74,3.52,3.57])
y = np.array([4.8,4.1,4.6,6.0,7.5,7.5,7.0,9.2,8.7,8.9,11.8,13.7,13.3,14.9,17.6,17.1,22.4,21.2])

slope, intercept, r, p, std_err = stats.linregress(x, y)

def myfunc1(x):
  return slope * x + intercept

def myfunc2(x):
  return 252.95*x**-0.779



mymodel1 = list(map(myfunc1, x))
mymodel2 = list(map(myfunc2, x))


plt.scatter(x,y)
plt.plot(x, mymodel1)
plt.show()

print(r)
print("y=",slope,"*x+",intercept)

"""
B = float(input())
glucose1 = myfunc1(B)
glucose2 = myfunc2(B)


print("Glucose Value:",glucose1*18)
print("Glucose Value:",glucose2)
"""

x = list(range(0,4))

def myfunc2(x):
  return 252.95*x**-0.779

A1=float(input())
print(myfunc2(A))